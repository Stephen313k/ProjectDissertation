{"ast":null,"code":"import _slicedToArray from\"C:/Users/Stephen/OneDrive/Desktop/PD/quizzer/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import ReactDOM from'react-dom';import{BrowserRouter as Router,Route,Switch}from\"react-router-dom\";import Home from'./Home';import Login from'./auth/Login';import Register from'./auth/Register';import CreateServer from'./server/CreateServer';import ExploreServers from'./server/ExploreServers';import PrivateRoute from'./utils/PrivateRoute';import{UserContext}from'./utils/UserContext';import Notifications from'./layout/Notifications';import{getCurrentUser}from'./services/auth';import QuizCategories from'./quiz/QuizCategories.jsx';/*\r\nconst App = () => {\r\n  return (\r\n      <QuizCategories/>\r\n  )\r\n};\r\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var getToken=function getToken(){var token=localStorage.getItem(\"token\");if(token){return true;}else{return false;}};var _useState=useState(getToken()),_useState2=_slicedToArray(_useState,2),isAuth=_useState2[0],setisAuth=_useState2[1];return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsxs(UserContext.Provider,{value:{isAuth:isAuth,setisAuth:setisAuth},children:[/*#__PURE__*/_jsx(PrivateRoute,{exact:true,path:\"/\",authed:isAuth,component:Home}),/*#__PURE__*/_jsx(Route,{path:\"/login\",component:Login}),/*#__PURE__*/_jsx(Route,{path:\"/register\",component:Register}),/*#__PURE__*/_jsx(Route,{path:\"/createserver\",component:CreateServer}),/*#__PURE__*/_jsx(Route,{path:\"/explore\",component:ExploreServers}),/*#__PURE__*/_jsx(Route,{path:\"/notifications\",component:Notifications}),/*#__PURE__*/_jsx(Route,{path:\"/quiz\",component:QuizCategories})]})})});}export default App;ReactDOM.render(/*#__PURE__*/_jsx(App,{}),document.getElementById(\"app\"));","map":{"version":3,"sources":["C:/Users/Stephen/OneDrive/Desktop/PD/quizzer/frontend/src/components/App.js"],"names":["React","useState","ReactDOM","BrowserRouter","Router","Route","Switch","Home","Login","Register","CreateServer","ExploreServers","PrivateRoute","UserContext","Notifications","getCurrentUser","QuizCategories","App","getToken","token","localStorage","getItem","isAuth","setisAuth","render","document","getElementById"],"mappings":"2IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,MAAzC,KAAuD,kBAAvD,CAEA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,cAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,OAASC,WAAT,KAA4B,qBAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,wBAA1B,CACA,OAASC,cAAT,KAA+B,iBAA/B,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,CACA;AACA;AACA;AACA;AACA;AACA;AACA,E,wFAEA,QAASC,CAAAA,GAAT,EAAe,CAEX,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAIF,KAAJ,CAAU,CACN,MAAO,KAAP,CACH,CAFD,IAEO,CACH,MAAO,MAAP,CACH,CACJ,CAPD,CASA,cAA4BlB,QAAQ,CAACiB,QAAQ,EAAT,CAApC,wCAAOI,MAAP,eAAeC,SAAf,eAEA,mBACI,KAAC,MAAD,wBACI,KAAC,MAAD,wBACI,MAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAED,MAAM,CAANA,MAAF,CAAUC,SAAS,CAATA,SAAV,CAA7B,wBACI,KAAC,YAAD,EAAc,KAAK,KAAnB,CAAoB,IAAI,CAAC,GAAzB,CAA6B,MAAM,CAAED,MAArC,CAA6C,SAAS,CAAEf,IAAxD,EADJ,cAEI,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAEC,KAAhC,EAFJ,cAGI,KAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,SAAS,CAAEC,QAAnC,EAHJ,cAII,KAAC,KAAD,EAAO,IAAI,CAAC,eAAZ,CAA4B,SAAS,CAAEC,YAAvC,EAJJ,cAKI,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,SAAS,CAAEC,cAAlC,EALJ,cAMI,KAAC,KAAD,EAAO,IAAI,CAAC,gBAAZ,CAA6B,SAAS,CAAEG,aAAxC,EANJ,cAOI,KAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,SAAS,CAAEE,cAA/B,EAPJ,GADJ,EADJ,EADJ,CAeH,CAED,cAAeC,CAAAA,GAAf,CAEAf,QAAQ,CAACsB,MAAT,cAAgB,KAAC,GAAD,IAAhB,CAAyBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAzB","sourcesContent":["import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from './Home';\r\nimport Login from './auth/Login';\r\nimport Register from './auth/Register';\r\nimport CreateServer from './server/CreateServer';\r\nimport ExploreServers from './server/ExploreServers';\r\nimport PrivateRoute from './utils/PrivateRoute';\r\nimport { UserContext } from './utils/UserContext';\r\nimport Notifications from './layout/Notifications'\r\nimport { getCurrentUser } from './services/auth';\r\nimport QuizCategories from './quiz/QuizCategories.jsx';\r\n/*\r\nconst App = () => {\r\n  return (\r\n      <QuizCategories/>\r\n  )\r\n};\r\n*/\r\n\r\nfunction App() {\r\n\r\n    const getToken = () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const [isAuth, setisAuth] = useState(getToken());\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <UserContext.Provider value={{ isAuth, setisAuth}}>    \r\n                    <PrivateRoute exact path=\"/\" authed={isAuth} component={Home} />\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/register\" component={Register} />\r\n                    <Route path=\"/createserver\" component={CreateServer} />\r\n                    <Route path=\"/explore\" component={ExploreServers} />\r\n                    <Route path=\"/notifications\" component={Notifications}/>\r\n                    <Route path=\"/quiz\" component={QuizCategories}/>\r\n                </UserContext.Provider>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\nReactDOM.render(<App />, document.getElementById(\"app\"));"]},"metadata":{},"sourceType":"module"}