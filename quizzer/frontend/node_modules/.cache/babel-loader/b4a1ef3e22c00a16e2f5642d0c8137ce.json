{"ast":null,"code":"import axios from\"axios\";import{unsetCurrentUser}from'./auth';//const to get server cateogires \nexport var getServerCategories=function getServerCategories(token){//using token\naxios.defaults.headers.common[\"Authorization\"]=\"Token \"+token;//to the api\nvar promise=axios.get('api/server/getcategories/');//then return data\nvar dataPromise=promise.then(function(response){return response.data;});return dataPromise;};//used on handleclick in explore servers\nexport var getserversInCategory=function getserversInCategory(token,id){//using token\naxios.defaults.headers.common[\"Authorization\"]=\"Token \"+token;//to the api\nvar promise=axios.get('api/server/getserverscategory/'+id);//then return data\nvar dataPromise=promise.then(function(response){return response.data;});return dataPromise;};export var getServersInSearch=function getServersInSearch(title){//url for the search\nvar promise=axios.get('api/server/searchserver?search='+title);var dataPromise=promise.then(function(response){return response.data;});return dataPromise;};export var CreateNewServer=function CreateNewServer(picture,banner,title,description,category){//Headers\nvar config={headers:{'Content-Type':'multipart/form-data'}};//getting the new form data\nvar formData=new FormData();//match up the fields from api\nformData.append(\"picture\",picture);formData.append(\"banner\",banner);formData.append(\"title\",title);formData.append(\"description\",description);formData.append(\"category\",category);axios//post to the api\n.post('api/server/createserver/',formData,config).then(function(response){//pass in form data\nconsole.log(formData);console.log(response);}).catch(function(error){console.log(error);window.alert(\"Error \"+error);});return true;};export var getSideNavServers=function getSideNavServers(token){//ensuring token authorization\naxios.defaults.headers.common[\"Authorization\"]=\"Token \"+token;//sending in url for the promise\nvar promise=axios.get('api/server/getservers/');var dataPromise=promise.then(function(response){return response.data;}).catch(function(error){//delete tokens and user information (knox auth tokens)\nunsetCurrentUser();window.alert(\"Your token expired you will be redirected to the login page\");//reload webpage\nwindow.location.reload();});return dataPromise;};export var getServerData=function getServerData(id,token){axios.defaults.headers.common[\"Authorization\"]=\"Token \"+token;//need server id\nvar promise=axios.get('api/server/getserverdetail/'+id);var dataPromise=promise.then(function(response){return response.data;});return dataPromise;};//need server id and title for new category\nexport var CreateNewCategory=function CreateNewCategory(server_id,title){//Headers\nvar config={headers:{'Content-Type':'application/json'}};//Request body\n//using json for the data\nvar post_body=JSON.stringify({server_id:server_id,title:title});// axios promise - post api url\nvar promise=axios.post('api/server/create-category-channel',post_body,config);var dataPromise=promise.then(function(response){return response.data;});return dataPromise;};//serverid, category_id, title, topic to create a new channel\nexport var CreateNewChannel=function CreateNewChannel(server_id,category_id,title,topic){//Headers\nvar config={headers:{'Content-Type':'application/json'}};//Request body\nvar post_body=JSON.stringify({server_id:server_id,category_id:category_id,title:title,topic:topic});// axios promise - post api url\nvar promise=axios.post('api/server/create-text-channel',post_body,config);var dataPromise=promise.then(function(response){return response.data;});return dataPromise;};export var BanFromServer=function BanFromServer(user_id,server_id){//create our url\nvar promise=axios.delete('api/server/ban/'+user_id+'/'+server_id);var dataPromise=promise.then(function(response){return response.data;});return dataPromise;};//take in server id\nexport var LeaveServer=function LeaveServer(server_id){//create url\nvar promise=axios.delete('api/server/leaveserver/'+server_id);var dataPromise=promise.then(function(response){return response.data;});return dataPromise;};","map":{"version":3,"sources":["C:/Users/Stephen/OneDrive/Desktop/New folder (13)/ProjectDissertation/quizzer/quizzer/frontend/src/components/services/Servers.js"],"names":["axios","unsetCurrentUser","getServerCategories","token","defaults","headers","common","promise","get","dataPromise","then","response","data","getserversInCategory","id","getServersInSearch","title","CreateNewServer","picture","banner","description","category","config","formData","FormData","append","post","console","log","catch","error","window","alert","getSideNavServers","location","reload","getServerData","CreateNewCategory","server_id","post_body","JSON","stringify","CreateNewChannel","category_id","topic","BanFromServer","user_id","delete","LeaveServer"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { unsetCurrentUser } from './auth';\r\n\r\n//const to get server cateogires \r\nexport const getServerCategories = (token) => {\r\n    //using token\r\n    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\r\n    //to the api\r\n    const promise = axios.get('api/server/getcategories/')\r\n    //then return data\r\n    const dataPromise = promise.then((response)=> response.data);\r\n    return dataPromise;\r\n};\r\n\r\n//used on handleclick in explore servers\r\nexport const getserversInCategory = (token, id) => {\r\n    //using token\r\n    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\r\n    //to the api\r\n    const promise = axios.get('api/server/getserverscategory/' + id);\r\n    //then return data\r\n    const dataPromise = promise.then((response)=> response.data);\r\n    return dataPromise;\r\n};\r\n\r\nexport const getServersInSearch = (title) => {\r\n    //url for the search\r\n    const promise = axios.get('api/server/searchserver?search=' + title);\r\n    const dataPromise = promise.then((response)=> response.data);\r\n    return dataPromise;\r\n}; \r\n\r\nexport const CreateNewServer = (picture, banner, title, description, category) => {\r\n    //Headers\r\n    const config = {\r\n        headers : {\r\n            'Content-Type' : 'multipart/form-data',\r\n        }\r\n    };\r\n    //getting the new form data\r\n    let formData = new FormData();\r\n    //match up the fields from api\r\n    formData.append(\"picture\", picture);\r\n    formData.append(\"banner\", banner);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"category\", category);\r\n\r\n    axios\r\n    //post to the api\r\n    .post('api/server/createserver/', formData, config)\r\n    .then(response => {\r\n        //pass in form data\r\n        console.log(formData);\r\n        console.log(response)\r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n        window.alert(\"Error \" + error);\r\n    })\r\n    return true;\r\n};\r\n\r\nexport const getSideNavServers = (token) => {\r\n    //ensuring token authorization\r\n    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\r\n    //sending in url for the promise\r\n    const promise = axios.get('api/server/getservers/');\r\n    const dataPromise = promise.then((response)=> response.data)\r\n    .catch(error =>{\r\n        //delete tokens and user information (knox auth tokens)\r\n        unsetCurrentUser();\r\n        window.alert(\"Your token expired you will be redirected to the login page\");\r\n        //reload webpage\r\n        window.location.reload();\r\n    });\r\n    return dataPromise;\r\n};\r\n\r\nexport const getServerData = (id, token) => {\r\n    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\r\n    //need server id\r\n    const promise = axios.get('api/server/getserverdetail/' + id);\r\n    const dataPromise = promise.then((response)=> response.data);\r\n    return dataPromise;\r\n};\r\n\r\n//need server id and title for new category\r\nexport const CreateNewCategory = (server_id, title) => {\r\n    //Headers\r\n    const config = {\r\n        headers : {\r\n            'Content-Type' : 'application/json',\r\n        }\r\n    };\r\n\r\n    //Request body\r\n    //using json for the data\r\n    const post_body = JSON.stringify({server_id, title})\r\n    // axios promise - post api url\r\n    const promise = axios.post('api/server/create-category-channel', post_body, config)\r\n    const dataPromise = promise.then((response)=> response.data);\r\n    return dataPromise;\r\n};\r\n\r\n//serverid, category_id, title, topic to create a new channel\r\nexport const CreateNewChannel = (server_id, category_id, title, topic) => {\r\n    //Headers\r\n    const config = {\r\n        headers : {\r\n            'Content-Type' : 'application/json',\r\n        }\r\n    };\r\n\r\n    //Request body\r\n    const post_body = JSON.stringify({server_id, category_id, title, topic})\r\n    // axios promise - post api url\r\n    const promise = axios.post('api/server/create-text-channel', post_body, config)\r\n    const dataPromise = promise.then((response)=> response.data);\r\n    return dataPromise;\r\n};\r\n\r\nexport const BanFromServer = (user_id, server_id) => {\r\n    //create our url\r\n    const promise = axios.delete('api/server/ban/' + user_id + '/' + server_id);\r\n    const dataPromise = promise.then((response)=> response.data);\r\n    return dataPromise;\r\n};\r\n\r\n//take in server id\r\nexport const LeaveServer = (server_id) => {\r\n    //create url\r\n    const promise = axios.delete('api/server/leaveserver/' + server_id);\r\n    const dataPromise = promise.then((response)=> response.data);\r\n    return dataPromise;\r\n};"]},"metadata":{},"sourceType":"module"}