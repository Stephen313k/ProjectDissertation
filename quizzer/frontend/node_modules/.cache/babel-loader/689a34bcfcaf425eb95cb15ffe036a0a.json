{"ast":null,"code":"import _slicedToArray from\"C:/Users/Stephen/OneDrive/Desktop/New folder (13)/ProjectDissertation/quizzer/quizzer/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{getServerCategories,getserversInCategory,getServersInSearch}from'../services/Servers';import{ReqToJoinServer}from'../services/notifications';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ExploreServers(){var _this=this;//To load the categories for the tabs\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),serverCategory=_useState2[0],setServerCategory=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),servers=_useState4[0],setServers=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),searchBody=_useState6[0],setSearchBody=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),ActiveCategoryCSS=_useState8[0],setActiveCategoryCSS=_useState8[1];useEffect(function(){//Check for the token\nvar token=localStorage.getItem(\"token\");//Request to get all the categories\ngetServerCategories(token).then(function(response){setServerCategory(response);});},[]);function handleClick(parameter,event){//Check for the token\nvar token=localStorage.getItem(\"token\");getserversInCategory(token,parameter).then(function(response){setServers(response.results);});if(ActiveCategoryCSS!==null){document.getElementById(ActiveCategoryCSS).classList.remove('is-active');}document.getElementById(parameter).classList.add('is-active');//This updates the value of the active category CSS\nsetActiveCategoryCSS(parameter);}//this function handles the search form\nvar handleSubmit=function handleSubmit(e){e.preventDefault();getServersInSearch(searchBody).then(function(response){setServers(response);});};//handle to request to join a server\nfunction handleRequestToJoin(parameter,event){//Check for the token\nvar token=localStorage.getItem(\"token\");ReqToJoinServer(parameter,token).then(function(response){window.alert(response);});}return/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"container pt-5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title is-1\",children:\"Explore\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle is-3\",children:\"Find cool servers\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(\"div\",{class:\"field is-grouped\",children:[/*#__PURE__*/_jsx(\"p\",{class:\"control is-expanded\",children:/*#__PURE__*/_jsx(\"input\",{class:\"input\",type:\"text\",placeholder:\"Find a cool server\",onChange:function onChange(e){return setSearchBody(e.target.value);}})}),/*#__PURE__*/_jsx(\"p\",{class:\"control\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",name:\"action\",class:\"button is-info\",children:\"Search\"})})]})}),/*#__PURE__*/_jsx(\"div\",{class:\"tabs is-centered\",children:/*#__PURE__*/_jsx(\"ul\",{children:serverCategory.map(function(category){return/*#__PURE__*/_jsx(\"li\",{id:category.id,class:\"\",children:/*#__PURE__*/_jsxs(\"a\",{value:category.id,onClick:handleClick.bind(_this,category.id),children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon is-small\",children:/*#__PURE__*/_jsx(\"i\",{className:\"material-icons\",children:category.icon})}),/*#__PURE__*/_jsx(\"span\",{children:category.title})]})},category.id);})})}),/*#__PURE__*/_jsx(\"div\",{className:\"columns pt-1\",children:servers.map(function(server){return/*#__PURE__*/_jsx(\"div\",{className:\"column is-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-image\",children:/*#__PURE__*/_jsx(\"figure\",{className:\"image is-4by3\",children:/*#__PURE__*/_jsx(\"img\",{src:server.banner,alt:\"Placeholder image\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"media\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"media-left\",children:/*#__PURE__*/_jsx(\"figure\",{className:\"image is-48x48\",children:/*#__PURE__*/_jsx(\"img\",{className:\"is-rounded\",src:server.picture,alt:\"Placeholder image\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"media-content\",children:[/*#__PURE__*/_jsx(\"p\",{class:\"title is-4\",children:server.title}),/*#__PURE__*/_jsxs(\"p\",{class:\"subtitle is-6\",children:[\"@\",server.user.username]})]})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"content\",children:[server.description,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"time\",{datetime:\"2016-1-1\",children:server.date})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"card-footer\",children:/*#__PURE__*/_jsx(\"a\",{onClick:handleRequestToJoin.bind(_this,server.id),className:\"card-footer-item\",children:\"Request Join\"})})]})]})});})})]})})})});}export default ExploreServers;/*import React, { useState, useEffect } from 'react'\r\n\r\nimport { getServerCategories, getserversInCategory, getServersInSearch } from '../services/Servers';\r\nimport { ReqToJoinServer } from '../services/notifications';\r\n\r\nfunction ExploreServers() {\r\n    //To load the categories for the tabs\r\n    const [serverCategory, setServerCategory] = useState([]);\r\n    const [servers, setServers] = useState([]);\r\n    const [searchBody, setSearchBody] = useState();\r\n\r\n    const [ActiveCategoryCSS, setActiveCategoryCSS] = useState(null);\r\n\r\n\r\n    useEffect(()=> {\r\n        //Check for the token\r\n        const token = localStorage.getItem(\"token\");\r\n        //Request to get all the categories\r\n        getServerCategories(token)\r\n        .then(response => {\r\n            //CALLING FROM ./Services/Servers.js\r\n            setServerCategory(response);\r\n        })\r\n    },[]);\r\n\r\n    //when there's a click pressed to explore servers\r\n    function handleClick(parameter, event){\r\n        //Check for the token\r\n        const token = localStorage.getItem(\"token\");\r\n        getserversInCategory(token, parameter)\r\n        .then(response =>{\r\n            setServers(response.results);\r\n        })\r\n        \r\n        //if this is different to null\r\n        if (ActiveCategoryCSS !== null){\r\n            document.getElementById(ActiveCategoryCSS).classList.remove('is-active')\r\n        }\r\n\r\n        //if there is elements in it then it is active, get the element\r\n        document.getElementById(parameter).classList.add('is-active');\r\n\r\n        //This updates the value of the active category CSS\r\n        setActiveCategoryCSS(parameter);\r\n    }\r\n\r\n    //this function handles the search form\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //used from explore servers \r\n        getServersInSearch(searchBody)\r\n        .then(response =>{\r\n            setServers(response);\r\n        })\r\n    };\r\n\r\n    //handle to request to join a server\r\n    function handleRequestToJoin(parameter, event){\r\n        //Check for the token\r\n        const token = localStorage.getItem(\"token\");\r\n        ReqToJoinServer(parameter, token)\r\n        .then(response =>{\r\n            window.alert(response);\r\n        })\r\n    }\r\n\r\n\r\nreturn (\r\n<main>\r\n    <div className=\"container pt-5\">\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n                <h1 className=\"title is-1\">Explore</h1>\r\n                <p className=\"subtitle is-3\">Find cool servers</p>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"field is-grouped\">\r\n                    <p className=\"control is-expanded\">\r\n                        <input className=\"input\" type=\"text\" placeholder=\"Find a server\" onChange={e => setSearchBody(e.target.value)}/>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button type=\"submit\" name=\"action\" className=\"button is-info\">Search</button>\r\n                    </p>\r\n                    </div>\r\n                </form>\r\n\r\n                <div class=\"tabs is-centered\">\r\n                <ul>\r\n                    {serverCategory.map(category =>(\r\n                        //mapping out all the servers, through category id \r\n                        <li key={category.id} id={category.id} class=\"\">\r\n                            <a value={category.id} onClick={handleClick.bind(this, category.id)}>\r\n                                <span className=\"icon is-small\"><i className=\"material-icons\">{category.icon}</i></span>\r\n                                <span>{category.title}</span>\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                </div>\r\n                \r\n                \r\n                <div className=\"columns pt-1\">\r\n                \r\n                {servers.map(server => (\r\n                    //mapping out all attributes of server: banner, picture, username, date, id\r\n                    <div className=\"column is-3\">\r\n                        <div className=\"card\">\r\n                        <div className=\"card-image\">\r\n                            <figure className=\"image is-4by3\">\r\n                            <img src={server.banner} alt=\"Placeholder image\" />\r\n                            </figure>\r\n                        </div>\r\n                        <div className=\"card-content\">             \r\n                            <div className=\"media\">\r\n                            <div className=\"media-left\">\r\n                                <figure className=\"image is-48x48\">\r\n                                <img className=\"is-rounded\" src={server.picture} alt=\"Placeholder image\" />\r\n                                </figure>\r\n                            </div>\r\n                            <div className=\"media-content\">\r\n                                <p className=\"title is-4\">{server.title}</p>\r\n                                <p className=\"subtitle is-6\">@{server.user.username}</p>\r\n                            </div>\r\n                            </div>\r\n\r\n                            <div className=\"content\">\r\n                                {server.description}\r\n                                <br/>\r\n                                <time datetime=\"2016-1-1\">{server.date}</time>\r\n                            </div>\r\n\r\n                            <footer className=\"card-footer\">\r\n                                <a onClick={handleRequestToJoin.bind(this, server.id)} className=\"card-footer-item\">Request Join</a>\r\n                            </footer>\r\n                            \r\n                        </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                                ))}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>\r\n)\r\n}\r\n\r\nexport default ExploreServers\r\n*/","map":{"version":3,"sources":["C:/Users/Stephen/OneDrive/Desktop/New folder (13)/ProjectDissertation/quizzer/quizzer/frontend/src/components/server/ExploreServers.js"],"names":["React","useState","useEffect","getServerCategories","getserversInCategory","getServersInSearch","ReqToJoinServer","ExploreServers","serverCategory","setServerCategory","servers","setServers","searchBody","setSearchBody","ActiveCategoryCSS","setActiveCategoryCSS","token","localStorage","getItem","then","response","handleClick","parameter","event","results","document","getElementById","classList","remove","add","handleSubmit","e","preventDefault","handleRequestToJoin","window","alert","target","value","map","category","id","bind","icon","title","server","banner","picture","user","username","description","date"],"mappings":"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":["import React, { useState, useEffect } from 'react'\r\n\r\nimport { getServerCategories, getserversInCategory, getServersInSearch } from '../services/Servers';\r\nimport { ReqToJoinServer } from '../services/notifications';\r\n\r\nfunction ExploreServers() {\r\n    //To load the categories for the tabs\r\n    const [serverCategory, setServerCategory] = useState([]);\r\n    const [servers, setServers] = useState([]);\r\n    const [searchBody, setSearchBody] = useState();\r\n\r\n    const [ActiveCategoryCSS, setActiveCategoryCSS] = useState(null);\r\n\r\n\r\n    useEffect(()=> {\r\n        //Check for the token\r\n        const token = localStorage.getItem(\"token\");\r\n        //Request to get all the categories\r\n        getServerCategories(token)\r\n        .then(response => {\r\n            setServerCategory(response);\r\n        })\r\n    },[]);\r\n\r\n    function handleClick(parameter, event){\r\n        //Check for the token\r\n        const token = localStorage.getItem(\"token\");\r\n        getserversInCategory(token, parameter)\r\n        .then(response =>{\r\n            setServers(response.results);\r\n        })\r\n\r\n        if (ActiveCategoryCSS !== null){\r\n            document.getElementById(ActiveCategoryCSS).classList.remove('is-active')\r\n        }\r\n\r\n        document.getElementById(parameter).classList.add('is-active');\r\n        //This updates the value of the active category CSS\r\n        setActiveCategoryCSS(parameter);\r\n    }\r\n\r\n    //this function handles the search form\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        getServersInSearch(searchBody)\r\n        .then(response =>{\r\n            setServers(response);\r\n        })\r\n    };\r\n\r\n    //handle to request to join a server\r\n    function handleRequestToJoin(parameter, event){\r\n        //Check for the token\r\n        const token = localStorage.getItem(\"token\");\r\n        ReqToJoinServer(parameter, token)\r\n        .then(response =>{\r\n            window.alert(response);\r\n        })\r\n    }\r\n\r\n\r\nreturn (\r\n<main>\r\n    <div className=\"container pt-5\">\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n                <h1 className=\"title is-1\">Explore</h1>\r\n                <p className=\"subtitle is-3\">Find cool servers</p>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div class=\"field is-grouped\">\r\n                    <p class=\"control is-expanded\">\r\n                        <input class=\"input\" type=\"text\" placeholder=\"Find a cool server\" onChange={e => setSearchBody(e.target.value)}/>\r\n                    </p>\r\n                    <p class=\"control\">\r\n                        <button type=\"submit\" name=\"action\" class=\"button is-info\">Search</button>\r\n                    </p>\r\n                    </div>\r\n                </form>\r\n\r\n                <div class=\"tabs is-centered\">\r\n                <ul>\r\n                    {serverCategory.map(category =>(\r\n                        <li key={category.id} id={category.id} class=\"\">\r\n                            <a value={category.id} onClick={handleClick.bind(this, category.id)}>\r\n                                <span className=\"icon is-small\"><i className=\"material-icons\">{category.icon}</i></span>\r\n                                <span>{category.title}</span>\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                </div>\r\n                \r\n                \r\n                <div className=\"columns pt-1\">\r\n                \r\n                {servers.map(server => (\r\n                    <div className=\"column is-3\">\r\n                        <div className=\"card\">\r\n                        <div className=\"card-image\">\r\n                            <figure className=\"image is-4by3\">\r\n                            <img src={server.banner} alt=\"Placeholder image\" />\r\n                            </figure>\r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                            <div className=\"media\">\r\n                            <div className=\"media-left\">\r\n                                <figure className=\"image is-48x48\">\r\n                                <img className=\"is-rounded\" src={server.picture} alt=\"Placeholder image\" />\r\n                                </figure>\r\n                            </div>\r\n                            <div className=\"media-content\">\r\n                                <p class=\"title is-4\">{server.title}</p>\r\n                                <p class=\"subtitle is-6\">@{server.user.username}</p>\r\n                            </div>\r\n                            </div>\r\n\r\n                            <div class=\"content\">\r\n                                {server.description}\r\n                                <br/>\r\n                                <time datetime=\"2016-1-1\">{server.date}</time>\r\n                            </div>\r\n\r\n                            <footer className=\"card-footer\">\r\n                                <a onClick={handleRequestToJoin.bind(this, server.id)} className=\"card-footer-item\">Request Join</a>\r\n                            </footer>\r\n                            \r\n                        </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                                ))}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>\r\n)\r\n}\r\n\r\nexport default ExploreServers\r\n/*import React, { useState, useEffect } from 'react'\r\n\r\nimport { getServerCategories, getserversInCategory, getServersInSearch } from '../services/Servers';\r\nimport { ReqToJoinServer } from '../services/notifications';\r\n\r\nfunction ExploreServers() {\r\n    //To load the categories for the tabs\r\n    const [serverCategory, setServerCategory] = useState([]);\r\n    const [servers, setServers] = useState([]);\r\n    const [searchBody, setSearchBody] = useState();\r\n\r\n    const [ActiveCategoryCSS, setActiveCategoryCSS] = useState(null);\r\n\r\n\r\n    useEffect(()=> {\r\n        //Check for the token\r\n        const token = localStorage.getItem(\"token\");\r\n        //Request to get all the categories\r\n        getServerCategories(token)\r\n        .then(response => {\r\n            //CALLING FROM ./Services/Servers.js\r\n            setServerCategory(response);\r\n        })\r\n    },[]);\r\n\r\n    //when there's a click pressed to explore servers\r\n    function handleClick(parameter, event){\r\n        //Check for the token\r\n        const token = localStorage.getItem(\"token\");\r\n        getserversInCategory(token, parameter)\r\n        .then(response =>{\r\n            setServers(response.results);\r\n        })\r\n        \r\n        //if this is different to null\r\n        if (ActiveCategoryCSS !== null){\r\n            document.getElementById(ActiveCategoryCSS).classList.remove('is-active')\r\n        }\r\n\r\n        //if there is elements in it then it is active, get the element\r\n        document.getElementById(parameter).classList.add('is-active');\r\n\r\n        //This updates the value of the active category CSS\r\n        setActiveCategoryCSS(parameter);\r\n    }\r\n\r\n    //this function handles the search form\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //used from explore servers \r\n        getServersInSearch(searchBody)\r\n        .then(response =>{\r\n            setServers(response);\r\n        })\r\n    };\r\n\r\n    //handle to request to join a server\r\n    function handleRequestToJoin(parameter, event){\r\n        //Check for the token\r\n        const token = localStorage.getItem(\"token\");\r\n        ReqToJoinServer(parameter, token)\r\n        .then(response =>{\r\n            window.alert(response);\r\n        })\r\n    }\r\n\r\n\r\nreturn (\r\n<main>\r\n    <div className=\"container pt-5\">\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n                <h1 className=\"title is-1\">Explore</h1>\r\n                <p className=\"subtitle is-3\">Find cool servers</p>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"field is-grouped\">\r\n                    <p className=\"control is-expanded\">\r\n                        <input className=\"input\" type=\"text\" placeholder=\"Find a server\" onChange={e => setSearchBody(e.target.value)}/>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button type=\"submit\" name=\"action\" className=\"button is-info\">Search</button>\r\n                    </p>\r\n                    </div>\r\n                </form>\r\n\r\n                <div class=\"tabs is-centered\">\r\n                <ul>\r\n                    {serverCategory.map(category =>(\r\n                        //mapping out all the servers, through category id \r\n                        <li key={category.id} id={category.id} class=\"\">\r\n                            <a value={category.id} onClick={handleClick.bind(this, category.id)}>\r\n                                <span className=\"icon is-small\"><i className=\"material-icons\">{category.icon}</i></span>\r\n                                <span>{category.title}</span>\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                </div>\r\n                \r\n                \r\n                <div className=\"columns pt-1\">\r\n                \r\n                {servers.map(server => (\r\n                    //mapping out all attributes of server: banner, picture, username, date, id\r\n                    <div className=\"column is-3\">\r\n                        <div className=\"card\">\r\n                        <div className=\"card-image\">\r\n                            <figure className=\"image is-4by3\">\r\n                            <img src={server.banner} alt=\"Placeholder image\" />\r\n                            </figure>\r\n                        </div>\r\n                        <div className=\"card-content\">             \r\n                            <div className=\"media\">\r\n                            <div className=\"media-left\">\r\n                                <figure className=\"image is-48x48\">\r\n                                <img className=\"is-rounded\" src={server.picture} alt=\"Placeholder image\" />\r\n                                </figure>\r\n                            </div>\r\n                            <div className=\"media-content\">\r\n                                <p className=\"title is-4\">{server.title}</p>\r\n                                <p className=\"subtitle is-6\">@{server.user.username}</p>\r\n                            </div>\r\n                            </div>\r\n\r\n                            <div className=\"content\">\r\n                                {server.description}\r\n                                <br/>\r\n                                <time datetime=\"2016-1-1\">{server.date}</time>\r\n                            </div>\r\n\r\n                            <footer className=\"card-footer\">\r\n                                <a onClick={handleRequestToJoin.bind(this, server.id)} className=\"card-footer-item\">Request Join</a>\r\n                            </footer>\r\n                            \r\n                        </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                                ))}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>\r\n)\r\n}\r\n\r\nexport default ExploreServers\r\n*/"]},"metadata":{},"sourceType":"module"}