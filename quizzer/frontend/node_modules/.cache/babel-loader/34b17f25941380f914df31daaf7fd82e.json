{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Stephen/OneDrive/Desktop/New folder (13)/ProjectDissertation/quizzer/quizzer/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/Stephen/OneDrive/Desktop/New folder (13)/ProjectDissertation/quizzer/quizzer/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Grid,Paper,Select,Button,MenuItem,Typography,InputLabel,FormControl}from\"@material-ui/core\";import React from\"react\";import{useState,useEffect}from\"react\";import{createMarkup}from\"../helpers\";import TotalResults from\"./TotalResults.jsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QuizAnswers=function QuizAnswers(_ref){var classes=_ref.classes,quizData=_ref.quizData,resetQuiz=_ref.resetQuiz,currentQuizStep=_ref.currentQuizStep,setCurrentQuizStep=_ref.setCurrentQuizStep;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selectedAnswers=_useState2[0],setSelectedAnswers=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),processedAnswers=_useState4[0],setProcessedAnswers=_useState4[1];var handleResult=function handleResult(e){e.preventDefault();var processedAnswers=selectedAnswers.map(function(_ref2){var answer=_ref2.answer,question=_ref2.question;var relatedQuestion=quizData.find(function(category){return category.question===question;});if(relatedQuestion.correct_answer===answer){return{correctAnswer:answer,isCorrect:true,question:question};}return{correctAnswer:relatedQuestion.correct_answer,wrongAnswer:answer,isCorrect:false,question:question};});setProcessedAnswers(processedAnswers);};var handleAnswerChange=function handleAnswerChange(e,selectedQuestion){e.preventDefault();var value=e.target.value;var isExistQuestion=selectedAnswers.length&&selectedAnswers.find(function(answer){return answer.question===selectedQuestion;});if(isExistQuestion&&isExistQuestion.answer){var updatedAnswers=selectedAnswers.map(function(answer){if(answer.question===selectedQuestion){return{question:selectedQuestion,answer:value};}return answer;});setSelectedAnswers(updatedAnswers);}else{setSelectedAnswers([].concat(_toConsumableArray(selectedAnswers),[{question:selectedQuestion,answer:value}]));}};var relatedAnswer=function relatedAnswer(question,selectedAnswers){if(selectedAnswers&&selectedAnswers.length){var relatedQuestion=selectedAnswers.find(function(answer){return answer.question===question;});return relatedQuestion&&relatedQuestion.answer||\"\";}return\"\";};useEffect(function(){window.scrollTo(0,\"20px\");},[]);return!processedAnswers||!processedAnswers.length?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h1\",className:classes.mainTitle,children:\"Answer flowing Questions:\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleResult,children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:4,children:/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[quizData.map(function(quiz){return/*#__PURE__*/_jsxs(Paper,{className:classes.paper,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",className:classes.question,children:/*#__PURE__*/_jsx(\"span\",{dangerouslySetInnerHTML:createMarkup(quiz.question)})}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,variant:\"outlined\",children:[/*#__PURE__*/_jsx(InputLabel,{id:\"answer-select-label\",children:\"Select answer:\"}),/*#__PURE__*/_jsx(Select,{required:true,name:\"answer\",id:\"answer-select\",label:\"Select answer\",value:relatedAnswer(quiz.question,selectedAnswers)||\"\",labelId:\"answer-select-label\",onChange:function onChange(e){return handleAnswerChange(e,quiz.question);},children:quiz.answers.map(function(answer){return/*#__PURE__*/_jsx(MenuItem,{value:answer,children:/*#__PURE__*/_jsx(\"span\",{dangerouslySetInnerHTML:createMarkup(answer)})},answer);})})]})]},quiz.question);}),/*#__PURE__*/_jsx(Button,{className:classes.submitButton,variant:\"contained\",color:\"primary\",type:\"submit\",children:\"Result\"})]})})})]}):/*#__PURE__*/_jsx(TotalResults,{classes:classes,resetQuiz:resetQuiz,currentQuizStep:currentQuizStep,processedAnswers:processedAnswers,setCurrentQuizStep:setCurrentQuizStep});};export default QuizAnswers;","map":{"version":3,"sources":["C:/Users/Stephen/OneDrive/Desktop/New folder (13)/ProjectDissertation/quizzer/quizzer/frontend/src/components/quiz/QuizAnswers.jsx"],"names":["Grid","Paper","Select","Button","MenuItem","Typography","InputLabel","FormControl","React","useState","useEffect","createMarkup","TotalResults","QuizAnswers","classes","quizData","resetQuiz","currentQuizStep","setCurrentQuizStep","selectedAnswers","setSelectedAnswers","processedAnswers","setProcessedAnswers","handleResult","e","preventDefault","map","answer","question","relatedQuestion","find","category","correct_answer","correctAnswer","isCorrect","wrongAnswer","handleAnswerChange","selectedQuestion","value","target","isExistQuestion","length","updatedAnswers","relatedAnswer","window","scrollTo","mainTitle","quiz","paper","answers","submitButton"],"mappings":"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","sourcesContent":["import {\r\n  Grid,\r\n  Paper,\r\n  Select,\r\n  Button,\r\n  MenuItem,\r\n  Typography,\r\n  InputLabel,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\n\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createMarkup } from \"../helpers\";\r\nimport TotalResults from \"./TotalResults.jsx\";\r\n\r\n\r\nconst QuizAnswers = ({\r\n  classes,\r\n  quizData,\r\n  resetQuiz,\r\n  currentQuizStep,\r\n  setCurrentQuizStep,\r\n}) => {\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const [processedAnswers, setProcessedAnswers] = useState([]);\r\n\r\n  const handleResult = (e) => {\r\n    e.preventDefault();\r\n\r\n    const processedAnswers = selectedAnswers.map(({ answer, question }) => {\r\n      const relatedQuestion = quizData.find(\r\n        (category) => category.question === question\r\n      );\r\n      if (relatedQuestion.correct_answer === answer) {\r\n        return { correctAnswer: answer, isCorrect: true, question };\r\n      }\r\n      return {\r\n        correctAnswer: relatedQuestion.correct_answer,\r\n        wrongAnswer: answer,\r\n        isCorrect: false,\r\n        question,\r\n      };\r\n    });\r\n\r\n    setProcessedAnswers(processedAnswers);\r\n  };\r\n\r\n  const handleAnswerChange = (e, selectedQuestion) => {\r\n    e.preventDefault();\r\n    const { value } = e.target;\r\n\r\n    const isExistQuestion =\r\n      selectedAnswers.length &&\r\n      selectedAnswers.find((answer) => answer.question === selectedQuestion);\r\n\r\n    if (isExistQuestion && isExistQuestion.answer) {\r\n      const updatedAnswers = selectedAnswers.map((answer) => {\r\n        if (answer.question === selectedQuestion) {\r\n          return { question: selectedQuestion, answer: value };\r\n        }\r\n        return answer;\r\n      });\r\n      setSelectedAnswers(updatedAnswers);\r\n    } else {\r\n      setSelectedAnswers([\r\n        ...selectedAnswers,\r\n        { question: selectedQuestion, answer: value },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const relatedAnswer = (question, selectedAnswers) => {\r\n    if (selectedAnswers && selectedAnswers.length) {\r\n      const relatedQuestion = selectedAnswers.find(\r\n        (answer) => answer.question === question\r\n      );\r\n      return (relatedQuestion && relatedQuestion.answer) || \"\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, \"20px\");\r\n  }, []);\r\n\r\n  return !processedAnswers || !processedAnswers.length ? (\r\n    <>\r\n      <Typography variant=\"h1\" className={classes.mainTitle}>\r\n        Answer flowing Questions:\r\n      </Typography>\r\n      <form onSubmit={handleResult}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            {quizData.map((quiz) => (\r\n              <Paper key={quiz.question} className={classes.paper}>\r\n                <Typography variant=\"h5\" className={classes.question}>\r\n                  <span dangerouslySetInnerHTML={createMarkup(quiz.question)} />\r\n                </Typography>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"answer-select-label\">\r\n                    Select answer:\r\n                  </InputLabel>\r\n                  <Select\r\n                    required\r\n                    name=\"answer\"\r\n                    id=\"answer-select\"\r\n                    label=\"Select answer\"\r\n                    value={relatedAnswer(quiz.question, selectedAnswers) || \"\"}\r\n                    labelId=\"answer-select-label\"\r\n                    onChange={(e) => handleAnswerChange(e, quiz.question)}\r\n                  >\r\n                    {quiz.answers.map((answer) => (\r\n                      <MenuItem key={answer} value={answer}>\r\n                        <span dangerouslySetInnerHTML={createMarkup(answer)} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Paper>\r\n            ))}\r\n            <Button\r\n              className={classes.submitButton}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Result\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  ) : (\r\n    <TotalResults\r\n      classes={classes}\r\n      resetQuiz={resetQuiz}\r\n      currentQuizStep={currentQuizStep}\r\n      processedAnswers={processedAnswers}\r\n      setCurrentQuizStep={setCurrentQuizStep}\r\n    />\r\n  );\r\n};\r\n\r\nexport default QuizAnswers;\r\n"]},"metadata":{},"sourceType":"module"}