{"ast":null,"code":"import _slicedToArray from\"C:/Users/Stephen/OneDrive/Desktop/New folder (13)/ProjectDissertation/quizzer/quizzer/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ServersNav(props){var _this=this;//Set the active server overlay\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),ActiveServerCSS=_useState2[0],setActiveServerCSS=_useState2[1];function handleClick(parameter,event){props.setActiveServer(parameter);props.setTextChannel(null);props.setchatData([]);if(ActiveServerCSS!==null){document.getElementById(ActiveServerCSS).classList.remove('active-img');}document.getElementById(parameter).classList.add('active-img');//this function allows the user click on the sidenav servers to change the value on setactiveserver\nsetActiveServerCSS(parameter);}return/*#__PURE__*/_jsx(\"div\",{className:\"box\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{style:{paddingTop:\"15px\",paddingLeft:\"5px\"},children:/*#__PURE__*/_jsx(Link,{to:\"/createserver\",className:\"button is-dark is-small is-rounded \",children:\"Create\"})}),/*#__PURE__*/_jsx(\"li\",{style:{paddingTop:\"15px\",paddingLeft:\"5px\"},children:/*#__PURE__*/_jsx(Link,{to:\"/explore\",className:\"button is-dark is-small is-rounded\",children:\"Explore\"})}),props.servers.map(function(server){return/*#__PURE__*/_jsx(\"li\",{style:{paddingTop:\"15px\",paddingLeft:\"5px\"},children:/*#__PURE__*/_jsx(\"figure\",{className:\"image is-64x54\",children:/*#__PURE__*/_jsx(\"a\",{onClick:handleClick.bind(_this,server.id),children:/*#__PURE__*/_jsx(\"img\",{id:server.id,src:server.picture,className:\"is-rounded\"})})})},server.id);})]})});}export default ServersNav;/*\r\nimport React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n//using props\r\nfunction ServersNav(props) {\r\n\r\n  //create new state\r\n  //when click on server from navbar create an overlay \r\n  const [ActiveServerCSS, setActiveServerCSS] = useState(null);\r\n\r\n  function handleClick(parameter, event){\r\n    props.setActiveServer(parameter); //parameter is id of server\r\n    props.setTextChannel(null);\r\n    props.setchatData([]);\r\n\r\n    if(ActiveServerCSS !== null){\r\n      //remove if you're in an active server so you are able to sign into another one\r\n      document.getElementById(ActiveServerCSS).classList.remove('active-img');\r\n    }\r\n    //assign it\r\n    document.getElementById(parameter).classList.add('active-img');\r\n    //this function allows the user to clock on the sidenav for servers\r\n    //to change the value on setactiveserver\r\n    setActiveServerCSS(parameter);\r\n  }\r\n\r\n  return (\r\n    <div className=\"box\">\r\n        <ul>\r\n            <li style={{paddingTop: \"15px\", paddingLeft:\"5px\"}}>\r\n                <Link to=\"/createServer\" className=\"button is-link is-small is-rounded\">Create</Link>\r\n            </li>\r\n            <li style={{paddingTop: \"15px\", paddingLeft:\"5px\"}}>\r\n                <Link to=\"/explore\" className=\"button is-link is-small is-rounded\">Explore</Link>\r\n            </li>\r\n            {props.servers.map(server =>(\r\n                 <li key={server.id} style={{paddingTop:\"15px\", paddingLeft: \"5px\"}}>\r\n                   <figure className=\"image is-65x54\">\r\n                      <a onClick = {handleClick.bind(this, server.id)}>\r\n                        <img id={server.id} src={server.picture} className=\"is-rounded\"></img>\r\n                      </a>\r\n                   </figure>\r\n                </li>\r\n            ))}\r\n \r\n        </ul>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ServersNav*/","map":{"version":3,"sources":["C:/Users/Stephen/OneDrive/Desktop/New folder (13)/ProjectDissertation/quizzer/quizzer/frontend/src/components/layout/ServersNav.js"],"names":["React","useState","Link","ServersNav","props","ActiveServerCSS","setActiveServerCSS","handleClick","parameter","event","setActiveServer","setTextChannel","setchatData","document","getElementById","classList","remove","add","paddingTop","paddingLeft","servers","map","server","bind","id","picture"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAASC,IAAT,KAAqB,kBAArB,C,wFAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,gBAEvB;AACA,cAA8CH,QAAQ,CAAC,IAAD,CAAtD,wCAAOI,eAAP,eAAwBC,kBAAxB,eAEA,QAASC,CAAAA,WAAT,CAAqBC,SAArB,CAAgCC,KAAhC,CAAsC,CAClCL,KAAK,CAACM,eAAN,CAAsBF,SAAtB,EACAJ,KAAK,CAACO,cAAN,CAAqB,IAArB,EACAP,KAAK,CAACQ,WAAN,CAAkB,EAAlB,EAEA,GAAGP,eAAe,GAAK,IAAvB,CAA4B,CACxBQ,QAAQ,CAACC,cAAT,CAAwBT,eAAxB,EAAyCU,SAAzC,CAAmDC,MAAnD,CAA0D,YAA1D,EACH,CAEDH,QAAQ,CAACC,cAAT,CAAwBN,SAAxB,EAAmCO,SAAnC,CAA6CE,GAA7C,CAAiD,YAAjD,EACA;AACAX,kBAAkB,CAACE,SAAD,CAAlB,CAEH,CAED,mBACI,YAAK,SAAS,CAAC,KAAf,uBACI,mCACI,WAAI,KAAK,CAAE,CAAEU,UAAU,CAAE,MAAd,CAAsBC,WAAW,CAAE,KAAnC,CAAX,uBACI,KAAC,IAAD,EAAM,EAAE,CAAC,eAAT,CAAyB,SAAS,CAAC,qCAAnC,oBADJ,EADJ,cAII,WAAI,KAAK,CAAE,CAAED,UAAU,CAAE,MAAd,CAAsBC,WAAW,CAAE,KAAnC,CAAX,uBACI,KAAC,IAAD,EAAM,EAAE,CAAC,UAAT,CAAoB,SAAS,CAAC,oCAA9B,qBADJ,EAJJ,CAOKf,KAAK,CAACgB,OAAN,CAAcC,GAAd,CAAkB,SAAAC,MAAM,qBACrB,WAAoB,KAAK,CAAE,CAAEJ,UAAU,CAAE,MAAd,CAAsBC,WAAW,CAAE,KAAnC,CAA3B,uBACI,eAAQ,SAAS,CAAC,gBAAlB,uBACI,UAAG,OAAO,CAAEZ,WAAW,CAACgB,IAAZ,CAAiB,KAAjB,CAAuBD,MAAM,CAACE,EAA9B,CAAZ,uBACI,YAAK,EAAE,CAAEF,MAAM,CAACE,EAAhB,CAAoB,GAAG,CAAEF,MAAM,CAACG,OAAhC,CAAyC,SAAS,CAAC,YAAnD,EADJ,EADJ,EADJ,EAASH,MAAM,CAACE,EAAhB,CADqB,EAAxB,CAPL,GADJ,EADJ,CAqBH,CAED,cAAerB,CAAAA,UAAf,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ServersNav(props) {\r\n\r\n    //Set the active server overlay\r\n    const [ActiveServerCSS, setActiveServerCSS] = useState(null);\r\n\r\n    function handleClick(parameter, event){\r\n        props.setActiveServer(parameter);\r\n        props.setTextChannel(null);\r\n        props.setchatData([]);\r\n\r\n        if(ActiveServerCSS !== null){\r\n            document.getElementById(ActiveServerCSS).classList.remove('active-img');\r\n        }\r\n\r\n        document.getElementById(parameter).classList.add('active-img');\r\n        //this function allows the user click on the sidenav servers to change the value on setactiveserver\r\n        setActiveServerCSS(parameter);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <ul>\r\n                <li style={{ paddingTop: \"15px\", paddingLeft: \"5px\"}}>\r\n                    <Link to=\"/createserver\" className=\"button is-dark is-small is-rounded \">Create</Link>\r\n                </li>\r\n                <li style={{ paddingTop: \"15px\", paddingLeft: \"5px\"}}>\r\n                    <Link to=\"/explore\" className=\"button is-dark is-small is-rounded\">Explore</Link>\r\n                </li>\r\n                {props.servers.map(server =>(\r\n                    <li key={server.id} style={{ paddingTop: \"15px\", paddingLeft: \"5px\"}}>\r\n                        <figure className=\"image is-64x54\">\r\n                            <a onClick={handleClick.bind(this, server.id)}>\r\n                                <img id={server.id} src={server.picture} className=\"is-rounded\"></img>\r\n                            </a>\r\n                        </figure>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ServersNav\r\n/*\r\nimport React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n//using props\r\nfunction ServersNav(props) {\r\n\r\n  //create new state\r\n  //when click on server from navbar create an overlay \r\n  const [ActiveServerCSS, setActiveServerCSS] = useState(null);\r\n\r\n  function handleClick(parameter, event){\r\n    props.setActiveServer(parameter); //parameter is id of server\r\n    props.setTextChannel(null);\r\n    props.setchatData([]);\r\n\r\n    if(ActiveServerCSS !== null){\r\n      //remove if you're in an active server so you are able to sign into another one\r\n      document.getElementById(ActiveServerCSS).classList.remove('active-img');\r\n    }\r\n    //assign it\r\n    document.getElementById(parameter).classList.add('active-img');\r\n    //this function allows the user to clock on the sidenav for servers\r\n    //to change the value on setactiveserver\r\n    setActiveServerCSS(parameter);\r\n  }\r\n\r\n  return (\r\n    <div className=\"box\">\r\n        <ul>\r\n            <li style={{paddingTop: \"15px\", paddingLeft:\"5px\"}}>\r\n                <Link to=\"/createServer\" className=\"button is-link is-small is-rounded\">Create</Link>\r\n            </li>\r\n            <li style={{paddingTop: \"15px\", paddingLeft:\"5px\"}}>\r\n                <Link to=\"/explore\" className=\"button is-link is-small is-rounded\">Explore</Link>\r\n            </li>\r\n            {props.servers.map(server =>(\r\n                 <li key={server.id} style={{paddingTop:\"15px\", paddingLeft: \"5px\"}}>\r\n                   <figure className=\"image is-65x54\">\r\n                      <a onClick = {handleClick.bind(this, server.id)}>\r\n                        <img id={server.id} src={server.picture} className=\"is-rounded\"></img>\r\n                      </a>\r\n                   </figure>\r\n                </li>\r\n            ))}\r\n \r\n        </ul>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ServersNav*/"]},"metadata":{},"sourceType":"module"}