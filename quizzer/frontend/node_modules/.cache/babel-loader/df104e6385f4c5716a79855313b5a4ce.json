{"ast":null,"code":"import _objectSpread from\"C:/Users/Stephen/OneDrive/Desktop/PD/quizzer/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/Stephen/OneDrive/Desktop/PD/quizzer/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Stephen/OneDrive/Desktop/PD/quizzer/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Stephen\\\\OneDrive\\\\Desktop\\\\PD\\\\quizzer\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{Grid,Paper,Select,Button,MenuItem,TextField,Container,Typography,InputLabel,FormControl}from\"@material-ui/core\";import axios from\"axios\";import{useState,useEffect}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import{styles,difficulties,createMarkup}from\"../helpers\";import QuizAnswers from\"./QuizAnswers.jsx\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return styles;});var QuizCategories=function QuizCategories(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),categories=_useState2[0],setCategories=_useState2[1];var _useState3=useState({id:\"\",name:\"\"}),_useState4=_slicedToArray(_useState3,2),category=_useState4[0],setCategory=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),quizNumber=_useState6[0],setQuizNumber=_useState6[1];var _useState7=useState({id:\"\",name:\"\"}),_useState8=_slicedToArray(_useState7,2),difficulty=_useState8[0],setDifficulty=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),quizData=_useState10[0],setQuizData=_useState10[1];var classes=useStyles();var _useState11=useState(\"start\"),_useState12=_slicedToArray(_useState11,2),currentQuizStep=_useState12[0],setCurrentQuizStep=_useState12[1];var fetchQuizData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,_yield$axios$get,data,formattedCategory;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;url=\"https://opentdb.com/api.php?amount=\".concat(quizNumber,\"&category=\").concat(category.id,\"&difficulty=\").concat(difficulty.name.toLowerCase());_context.next=4;return axios.get(url);case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;formattedCategory=data.results.map(function(cat){var incorrectAnswersIndexes=cat.incorrect_answers.length;var randomIndex=Math.round(Math.random()*(incorrectAnswersIndexes-0)+0);cat.incorrect_answers.splice(randomIndex,0,cat.correct_answer);return _objectSpread(_objectSpread({},cat),{},{answers:cat.incorrect_answers});});setQuizData(formattedCategory);setCurrentQuizStep(\"results\");_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log(\"Fetch quiz error =====>>>>\",_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function fetchQuizData(){return _ref.apply(this,arguments);};}();var fetchCategories=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$axios$get2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(\"https://opentdb.com/api_category.php\");case 2:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;setCategories(data.trivia_categories);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchCategories(){return _ref2.apply(this,arguments);};}();useEffect(function(){fetchCategories();window.scrollTo(0,\"20px\");},[]);var handleSubmit=function handleSubmit(e){e.preventDefault();if(!quizData.length&&quizNumber&&category.id&&difficulty){fetchQuizData();}};var handleSelectChange=function handleSelectChange(e){e.preventDefault();var selectedCategory=categories.find(function(cat){return cat.id===e.target.value;});setCategory(selectedCategory);};var handleDifficultyChange=function handleDifficultyChange(e){e.preventDefault();var selectedDifficulty=difficulties.find(function(diff){return diff.id===e.target.value;});setDifficulty(selectedDifficulty);};var handleChange=function handleChange(e){e.preventDefault();setQuizNumber(e.target.value);};var resetQuiz=function resetQuiz(e){e.preventDefault();setQuizData([]);setCategory(\"\");setQuizNumber(\"\");setDifficulty(\"\");setCurrentQuizStep(\"start\");window.scrollTo(0,\"20px\");};if(!categories.length){return null;}return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:currentQuizStep===\"start\"?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h1\",className:classes.mainTitle,children:\"Take a quiz:\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,variant:\"outlined\",children:[/*#__PURE__*/_jsx(InputLabel,{id:\"category-select-label\",children:\"Select category:\"}),/*#__PURE__*/_jsx(Select,{required:true,name:\"category\",value:category.id||\"\",id:\"category-select\",label:\"Select category\",labelId:\"category-select-label\",onChange:handleSelectChange,children:categories.map(function(category){return/*#__PURE__*/_jsx(MenuItem,{value:category.id,children:/*#__PURE__*/_jsx(\"span\",{dangerouslySetInnerHTML:createMarkup(category.name)})},category.id);})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,variant:\"outlined\",children:[/*#__PURE__*/_jsx(InputLabel,{id:\"difficulty-select-label\",children:\"Select Difficulty:\"}),/*#__PURE__*/_jsx(Select,{required:true,name:\"difficulty\",value:difficulty.id||\"\",id:\"difficulty-select\",label:\"Select Difficulty\",labelId:\"difficulty-select-label\",onChange:handleDifficultyChange,children:difficulties.map(function(difficulty){return/*#__PURE__*/_jsx(MenuItem,{value:difficulty.id,children:difficulty.name},difficulty.id);})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{inputProps:{min:1,max:10},required:true,fullWidth:true,type:\"number\",id:\"quiz-number\",variant:\"outlined\",name:\"quiz-number\",label:\"Add a quiz number from 1 to 10\",value:quizNumber||\"\",onChange:handleChange})})]}),/*#__PURE__*/_jsx(Button,{className:classes.submitButton,type:\"submit\",variant:\"contained\",color:\"primary\",children:\"Submit\"})]})]}):/*#__PURE__*/_jsx(QuizAnswers,{classes:classes,quizData:quizData,resetQuiz:resetQuiz,categories:categories,currentQuizStep:currentQuizStep,setCurrentQuizStep:setCurrentQuizStep})})});};export default QuizCategories;","map":{"version":3,"sources":["C:/Users/Stephen/OneDrive/Desktop/PD/quizzer/frontend/src/components/quiz/QuizCategories.jsx"],"names":["Grid","Paper","Select","Button","MenuItem","TextField","Container","Typography","InputLabel","FormControl","axios","useState","useEffect","makeStyles","styles","difficulties","createMarkup","QuizAnswers","React","useStyles","theme","QuizCategories","categories","setCategories","id","name","category","setCategory","quizNumber","setQuizNumber","difficulty","setDifficulty","quizData","setQuizData","classes","currentQuizStep","setCurrentQuizStep","fetchQuizData","url","toLowerCase","get","data","formattedCategory","results","map","cat","incorrectAnswersIndexes","incorrect_answers","length","randomIndex","Math","round","random","splice","correct_answer","answers","console","log","fetchCategories","trivia_categories","window","scrollTo","handleSubmit","e","preventDefault","handleSelectChange","selectedCategory","find","target","value","handleDifficultyChange","selectedDifficulty","diff","handleChange","resetQuiz","paper","mainTitle","min","max","submitButton"],"mappings":"0jBAAA,OAASA,IAAT,CAAeC,KAAf,CAAsBC,MAAtB,CAA8BC,MAA9B,CAAsCC,QAAtC,CAAgDC,SAAhD,CAA2DC,SAA3D,CAAsEC,UAAtE,CAAkFC,UAAlF,CAA8FC,WAA9F,KAAiH,mBAAjH,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,MAAT,CAAiBC,YAAjB,CAA+BC,YAA/B,KAAmD,YAAnD,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,6IAEA,GAAMC,CAAAA,SAAS,CAAGN,UAAU,CAAC,SAACO,KAAD,CAAW,CACtC,MAAON,CAAAA,MAAP,CACD,CAF2B,CAA5B,CAIA,GAAMO,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAG3B,cAAoCV,QAAQ,CAAC,EAAD,CAA5C,wCAAOW,UAAP,eAAmBC,aAAnB,eACA,eAAgCZ,QAAQ,CAAC,CAAEa,EAAE,CAAE,EAAN,CAAUC,IAAI,CAAE,EAAhB,CAAD,CAAxC,yCAAOC,QAAP,eAAiBC,WAAjB,eAEA,eAAoChB,QAAQ,CAAC,IAAD,CAA5C,yCAAOiB,UAAP,eAAmBC,aAAnB,eACA,eAAoClB,QAAQ,CAAC,CAAEa,EAAE,CAAE,EAAN,CAAUC,IAAI,CAAE,EAAhB,CAAD,CAA5C,yCAAOK,UAAP,eAAmBC,aAAnB,eAEA,eAAgCpB,QAAQ,CAAC,EAAD,CAAxC,0CAAOqB,QAAP,gBAAiBC,WAAjB,gBACA,GAAMC,CAAAA,OAAO,CAAGf,SAAS,EAAzB,CAEA,gBAA8CR,QAAQ,CAAC,OAAD,CAAtD,2CAAOwB,eAAP,gBAAwBC,kBAAxB,gBAEA,GAAMC,CAAAA,aAAa,0FAAG,mMAIZC,GAJY,8CAIgCV,UAJhC,sBAKhBF,QAAQ,CAACF,EALO,wBAMHM,UAAU,CAACL,IAAX,CAAgBc,WAAhB,EANG,wBAOK7B,CAAAA,KAAK,CAAC8B,GAAN,CAAUF,GAAV,CAPL,uCAOVG,IAPU,kBAOVA,IAPU,CASZC,iBATY,CASQD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiB,SAACC,GAAD,CAAS,CAElD,GAAMC,CAAAA,uBAAuB,CAAGD,GAAG,CAACE,iBAAJ,CAAsBC,MAAtD,CACA,GAAMC,CAAAA,WAAW,CAAGC,IAAI,CAACC,KAAL,CAClBD,IAAI,CAACE,MAAL,IAAiBN,uBAAuB,CAAG,CAA3C,EAAgD,CAD9B,CAApB,CAIAD,GAAG,CAACE,iBAAJ,CAAsBM,MAAtB,CAA6BJ,WAA7B,CAA0C,CAA1C,CAA6CJ,GAAG,CAACS,cAAjD,EAEA,sCACKT,GADL,MAEEU,OAAO,CAAEV,GAAG,CAACE,iBAFf,GAID,CAbyB,CATR,CAwBlBd,WAAW,CAACS,iBAAD,CAAX,CACAN,kBAAkB,CAAC,SAAD,CAAlB,CAzBkB,iFA2BlBoB,OAAO,CAACC,GAAR,CAAY,4BAAZ,cA3BkB,qEAAH,kBAAbpB,CAAAA,aAAa,0CAAnB,CA+BA,GAAMqB,CAAAA,eAAe,2FAAG,0LACChD,CAAAA,KAAK,CAAC8B,GAAN,wCADD,yCACdC,IADc,mBACdA,IADc,CAEtBlB,aAAa,CAACkB,IAAI,CAACkB,iBAAN,CAAb,CAFsB,wDAAH,kBAAfD,CAAAA,eAAe,2CAArB,CAKA9C,SAAS,CAAC,UAAM,CACd8C,eAAe,GACfE,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,MAAnB,EACD,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACA,GAAI,CAAChC,QAAQ,CAACgB,MAAV,EAAoBpB,UAApB,EAAkCF,QAAQ,CAACF,EAA3C,EAAiDM,UAArD,CAAiE,CAC/DO,aAAa,GACd,CACF,CALD,CAOA,GAAM4B,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACF,CAAD,CAAO,CAChCA,CAAC,CAACC,cAAF,GACA,GAAME,CAAAA,gBAAgB,CAAG5C,UAAU,CAAC6C,IAAX,CACvB,SAACtB,GAAD,QAASA,CAAAA,GAAG,CAACrB,EAAJ,GAAWuC,CAAC,CAACK,MAAF,CAASC,KAA7B,EADuB,CAAzB,CAGA1C,WAAW,CAACuC,gBAAD,CAAX,CACD,CAND,CAQA,GAAMI,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACP,CAAD,CAAO,CACpCA,CAAC,CAACC,cAAF,GACA,GAAMO,CAAAA,kBAAkB,CAAGxD,YAAY,CAACoD,IAAb,CACzB,SAACK,IAAD,QAAUA,CAAAA,IAAI,CAAChD,EAAL,GAAYuC,CAAC,CAACK,MAAF,CAASC,KAA/B,EADyB,CAA3B,CAGAtC,aAAa,CAACwC,kBAAD,CAAb,CACD,CAND,CAQA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACV,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACAnC,aAAa,CAACkC,CAAC,CAACK,MAAF,CAASC,KAAV,CAAb,CACD,CAHD,CAKA,GAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACX,CAAD,CAAO,CACvBA,CAAC,CAACC,cAAF,GACA/B,WAAW,CAAC,EAAD,CAAX,CACAN,WAAW,CAAC,EAAD,CAAX,CACAE,aAAa,CAAC,EAAD,CAAb,CACAE,aAAa,CAAC,EAAD,CAAb,CACAK,kBAAkB,CAAC,OAAD,CAAlB,CACAwB,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,MAAnB,EACD,CARD,CAUA,GAAI,CAACvC,UAAU,CAAC0B,MAAhB,CAAwB,CACtB,MAAO,KAAP,CACD,CAED,mBACE,KAAC,SAAD,wBACE,KAAC,KAAD,EAAO,SAAS,CAAEd,OAAO,CAACyC,KAA1B,UACGxC,eAAe,GAAK,OAApB,cACC,wCACE,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,SAAS,CAAED,OAAO,CAAC0C,SAA5C,0BADF,cAIE,cAAM,QAAQ,CAAEd,YAAhB,wBACE,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACE,MAAC,WAAD,EAAa,SAAS,KAAtB,CAAuB,OAAO,CAAC,UAA/B,wBACE,KAAC,UAAD,EAAY,EAAE,CAAC,uBAAf,8BADF,cAIE,KAAC,MAAD,EACE,QAAQ,KADV,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEpC,QAAQ,CAACF,EAAT,EAAe,EAHxB,CAIE,EAAE,CAAC,iBAJL,CAKE,KAAK,CAAC,iBALR,CAME,OAAO,CAAC,uBANV,CAOE,QAAQ,CAAEyC,kBAPZ,UASG3C,UAAU,CAACsB,GAAX,CAAe,SAAClB,QAAD,qBACd,KAAC,QAAD,EAA4B,KAAK,CAAEA,QAAQ,CAACF,EAA5C,uBACE,aACE,uBAAuB,CAAER,YAAY,CACnCU,QAAQ,CAACD,IAD0B,CADvC,EADF,EAAeC,QAAQ,CAACF,EAAxB,CADc,EAAf,CATH,EAJF,GADF,EADF,cA2BE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACE,MAAC,WAAD,EAAa,SAAS,KAAtB,CAAuB,OAAO,CAAC,UAA/B,wBACE,KAAC,UAAD,EAAY,EAAE,CAAC,yBAAf,gCADF,cAIE,KAAC,MAAD,EACE,QAAQ,KADV,CAEE,IAAI,CAAC,YAFP,CAGE,KAAK,CAAEM,UAAU,CAACN,EAAX,EAAiB,EAH1B,CAIE,EAAE,CAAC,mBAJL,CAKE,KAAK,CAAC,mBALR,CAME,OAAO,CAAC,yBANV,CAOE,QAAQ,CAAE8C,sBAPZ,UASGvD,YAAY,CAAC6B,GAAb,CAAiB,SAACd,UAAD,qBAChB,KAAC,QAAD,EAA8B,KAAK,CAAEA,UAAU,CAACN,EAAhD,UACGM,UAAU,CAACL,IADd,EAAeK,UAAU,CAACN,EAA1B,CADgB,EAAjB,CATH,EAJF,GADF,EA3BF,cAiDE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACE,KAAC,SAAD,EACE,UAAU,CAAE,CAAEqD,GAAG,CAAE,CAAP,CAAUC,GAAG,CAAE,EAAf,CADd,CAEE,QAAQ,KAFV,CAGE,SAAS,KAHX,CAIE,IAAI,CAAC,QAJP,CAKE,EAAE,CAAC,aALL,CAME,OAAO,CAAC,UANV,CAOE,IAAI,CAAC,aAPP,CAQE,KAAK,iCARP,CASE,KAAK,CAAElD,UAAU,EAAI,EATvB,CAUE,QAAQ,CAAE6C,YAVZ,EADF,EAjDF,GADF,cAiEE,KAAC,MAAD,EACE,SAAS,CAAEvC,OAAO,CAAC6C,YADrB,CAEE,IAAI,CAAC,QAFP,CAGE,OAAO,CAAC,WAHV,CAIE,KAAK,CAAC,SAJR,oBAjEF,GAJF,GADD,cAiFC,KAAC,WAAD,EACE,OAAO,CAAE7C,OADX,CAEE,QAAQ,CAAEF,QAFZ,CAGE,SAAS,CAAE0C,SAHb,CAIE,UAAU,CAAEpD,UAJd,CAKE,eAAe,CAAEa,eALnB,CAME,kBAAkB,CAAEC,kBANtB,EAlFJ,EADF,EADF,CAgGD,CAjMD,CAmMA,cAAef,CAAAA,cAAf","sourcesContent":["import { Grid, Paper, Select, Button, MenuItem, TextField, Container, Typography, InputLabel, FormControl,} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { styles, difficulties, createMarkup } from \"../helpers\";\r\nimport QuizAnswers from \"./QuizAnswers.jsx\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return styles;\r\n});\r\n\r\nconst QuizCategories = () => {\r\n\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useState({ id: \"\", name: \"\" });\r\n\r\n  const [quizNumber, setQuizNumber] = useState(null);\r\n  const [difficulty, setDifficulty] = useState({ id: \"\", name: \"\" });\r\n\r\n  const [quizData, setQuizData] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  const [currentQuizStep, setCurrentQuizStep] = useState(\"start\");\r\n\r\n  const fetchQuizData = async () => {\r\n\r\n\r\n    try {\r\n      const url = `https://opentdb.com/api.php?amount=${quizNumber}&category=${\r\n        category.id\r\n      }&difficulty=${difficulty.name.toLowerCase()}`;\r\n      const { data } = await axios.get(url);\r\n\r\n      const formattedCategory = data.results.map((cat) => {\r\n\r\n        const incorrectAnswersIndexes = cat.incorrect_answers.length;\r\n        const randomIndex = Math.round(\r\n          Math.random() * (incorrectAnswersIndexes - 0) + 0\r\n        );\r\n\r\n        cat.incorrect_answers.splice(randomIndex, 0, cat.correct_answer);\r\n        \r\n        return {\r\n          ...cat,\r\n          answers: cat.incorrect_answers,\r\n        };\r\n      });\r\n\r\n      setQuizData(formattedCategory);\r\n      setCurrentQuizStep(\"results\");\r\n    } catch (error) {\r\n      console.log(\"Fetch quiz error =====>>>>\", error);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    const { data } = await axios.get(`https://opentdb.com/api_category.php`);\r\n    setCategories(data.trivia_categories);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n    window.scrollTo(0, \"20px\");\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!quizData.length && quizNumber && category.id && difficulty) {\r\n      fetchQuizData();\r\n    }\r\n  };\r\n\r\n  const handleSelectChange = (e) => {\r\n    e.preventDefault();\r\n    const selectedCategory = categories.find(\r\n      (cat) => cat.id === e.target.value\r\n    );\r\n    setCategory(selectedCategory);\r\n  };\r\n\r\n  const handleDifficultyChange = (e) => {\r\n    e.preventDefault();\r\n    const selectedDifficulty = difficulties.find(\r\n      (diff) => diff.id === e.target.value\r\n    );\r\n    setDifficulty(selectedDifficulty);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setQuizNumber(e.target.value);\r\n  };\r\n\r\n  const resetQuiz = (e) => {\r\n    e.preventDefault();\r\n    setQuizData([]);\r\n    setCategory(\"\");\r\n    setQuizNumber(\"\");\r\n    setDifficulty(\"\");\r\n    setCurrentQuizStep(\"start\");\r\n    window.scrollTo(0, \"20px\");\r\n  };\r\n\r\n  if (!categories.length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Paper className={classes.paper}>\r\n        {currentQuizStep === \"start\" ? (\r\n          <>\r\n            <Typography variant=\"h1\" className={classes.mainTitle}>\r\n              Take a quiz:\r\n            </Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth variant=\"outlined\">\r\n                    <InputLabel id=\"category-select-label\">\r\n                      Select category:\r\n                    </InputLabel>\r\n                    <Select\r\n                      required\r\n                      name=\"category\"\r\n                      value={category.id || \"\"}\r\n                      id=\"category-select\"\r\n                      label=\"Select category\"\r\n                      labelId=\"category-select-label\"\r\n                      onChange={handleSelectChange}\r\n                    >\r\n                      {categories.map((category) => (\r\n                        <MenuItem key={category.id} value={category.id}>\r\n                          <span\r\n                            dangerouslySetInnerHTML={createMarkup(\r\n                              category.name\r\n                            )}\r\n                          />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth variant=\"outlined\">\r\n                    <InputLabel id=\"difficulty-select-label\">\r\n                      Select Difficulty:\r\n                    </InputLabel>\r\n                    <Select\r\n                      required\r\n                      name=\"difficulty\"\r\n                      value={difficulty.id || \"\"}\r\n                      id=\"difficulty-select\"\r\n                      label=\"Select Difficulty\"\r\n                      labelId=\"difficulty-select-label\"\r\n                      onChange={handleDifficultyChange}\r\n                    >\r\n                      {difficulties.map((difficulty) => (\r\n                        <MenuItem key={difficulty.id} value={difficulty.id}>\r\n                          {difficulty.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    inputProps={{ min: 1, max: 10 }}\r\n                    required\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    id=\"quiz-number\"\r\n                    variant=\"outlined\"\r\n                    name=\"quiz-number\"\r\n                    label={`Add a quiz number from 1 to 10`}\r\n                    value={quizNumber || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                className={classes.submitButton}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <QuizAnswers\r\n            classes={classes}\r\n            quizData={quizData}\r\n            resetQuiz={resetQuiz}\r\n            categories={categories}\r\n            currentQuizStep={currentQuizStep}\r\n            setCurrentQuizStep={setCurrentQuizStep}\r\n          />\r\n        )}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QuizCategories;"]},"metadata":{},"sourceType":"module"}