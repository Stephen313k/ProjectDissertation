{"ast":null,"code":"import _slicedToArray from\"C:/Users/Stephen/OneDrive/Desktop/PD/quizzer/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{useHistory}from'react-router-dom';import{getServerCategories,CreateNewServer}from'../services/Servers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CreateServer(){var history=useHistory();var _useState=useState(),_useState2=_slicedToArray(_useState,2),picture=_useState2[0],setPicture=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),banner=_useState4[0],setBanner=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),title=_useState6[0],setTitle=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),description=_useState8[0],setDescription=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),formCategory=_useState10[0],setFormCategory=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),serverCategory=_useState12[0],setserverCategory=_useState12[1];var fileNamePicture=document.querySelector('#picture-file .file-name');var fileNameBanner=document.querySelector('#banner-file .file-name');useEffect(function(){//Check for the token\nvar token=localStorage.getItem(\"token\");//Request to get all the categories\ngetServerCategories(token).then(function(response){setserverCategory(response);});},[]);var handleSubmit=function handleSubmit(e){e.preventDefault();var serverCreated=CreateNewServer(picture,banner,title,description,formCategory);if(serverCreated===true){history.push(\"/\");}};return/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"container pt-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h3\",{className:\"title is-3\",children:\"Create New Server\"}),/*#__PURE__*/_jsx(\"div\",{className:\"field\",children:/*#__PURE__*/_jsx(\"div\",{id:\"picture-file\",className:\"file is-medium has-name\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"file-label\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"picture\",className:\"file-input\",type:\"file\",name:\"picture\",onChange:function onChange(e){setPicture(e.target.files[0]);//This is to set the name of the filename to the span tag\nvar fileInput=document.getElementById('picture');if(fileInput.files.length>0){fileNamePicture.textContent=fileInput.files[0].name;}}}),/*#__PURE__*/_jsxs(\"span\",{className:\"file-cta\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"file-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"material-icons\",children:\"file_upload\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"file-label\",children:\"Choose a Picture\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"file-name\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"field\",children:/*#__PURE__*/_jsx(\"div\",{id:\"banner-file\",className:\"file is-medium has-name\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"file-label\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"banner\",className:\"file-input\",type:\"file\",name:\"banner\",onChange:function onChange(e){setBanner(e.target.files[0]);//This is to set the name of the filename to the span tag\nvar fileInput=document.getElementById('banner');if(fileInput.files.length>0){fileNameBanner.textContent=fileInput.files[0].name;}}}),/*#__PURE__*/_jsxs(\"span\",{className:\"file-cta\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"file-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"material-icons\",children:\"file_upload\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"file-label\",children:\"Choose a Banner\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"file-name\"})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"label\",children:\"Title\"}),/*#__PURE__*/_jsx(\"div\",{className:\"control\",children:/*#__PURE__*/_jsx(\"input\",{id:\"title\",name:\"title\",className:\"input\",type:\"text\",placeholder:\"Text input\",onChange:function onChange(e){return setTitle(e.target.value);}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"label\",children:\"Description\"}),/*#__PURE__*/_jsx(\"div\",{className:\"control\",children:/*#__PURE__*/_jsx(\"textarea\",{id:\"description\",name:\"description\",className:\"textarea\",placeholder:\"Textarea\",onChange:function onChange(e){return setDescription(e.target.value);}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"label\",children:\"Category\"}),/*#__PURE__*/_jsx(\"div\",{className:\"control\",children:/*#__PURE__*/_jsx(\"div\",{className:\"select\",children:/*#__PURE__*/_jsxs(\"select\",{onChange:function onChange(e){return setFormCategory(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Choose the category\"}),serverCategory.map(function(category){return/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.title},category.id);})]})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field is-grouped\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"control\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button is-link\",children:\"Submit\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"control\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button is-link is-light\",children:\"Cancel\"})})]})]})})})})});}export default CreateServer;/*\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { getServerCategories, CreateNewServer } from '../services/Servers';\r\n\r\nfunction CreateServer() {\r\n\r\n    let history = useHistory();\r\n    //useStates for setting new server information\r\n    const [picture, setPicture] = useState();\r\n    const [banner, setBanner] = useState();\r\n    const [title, setTitle] = useState();\r\n    const [description, setDescription] = useState();\r\n    const [formCategory, setFormCategory] = useState();\r\n\r\n    const [serverCategory, setserverCategory] = useState([]);\r\n\r\n    //grabbing the file name for upload picture and banner\r\n    const fileNamePicture = document.querySelector('#picture-file .file-name');\r\n    const fileNameBanner = document.querySelector('#banner-file .file-name');\r\n\r\n    //using hook to server to grab the categories\r\n    useEffect(()=> {\r\n        //Check for the token\r\n        const token = localStorage.getItem(\"token\");\r\n        //Request to get all the categories\r\n        getServerCategories(token)\r\n        .then(response => {\r\n            setserverCategory(response);\r\n        })\r\n    },[]);\r\n\r\n\r\n    //button for creating new server\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        const serverCreated = CreateNewServer(picture, banner, title, description, formCategory);\r\n        if(serverCreated === true){\r\n            //redirect user to homepage\r\n            history.push(\"/\");\r\n        }\r\n    };\r\n\r\n\r\nreturn (\r\n<main>\r\n    <div className=\"container pt-6\">\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n                \r\n                <form onSubmit={handleSubmit}>\r\n                    <h3 className=\"title is-3\">Quizzer - Create New Server</h3>\r\n\r\n                    <div className=\"field\">\r\n                    <div id=\"picture-file\" className=\"file is-medium has-name\">\r\n                    <label className=\"file-label\">\r\n                       <input id=\"picture\" className=\"file-input\" type=\"file\" name=\"picture\" onChange={e => {\r\n                            setPicture(e.target.files[0])\r\n                            //This is to set the name of the filename to the tag then run condition\r\n                            let fileInput = document.getElementById('picture');\r\n                            if (fileInput.files.length > 0){\r\n                                fileNamePicture.textContent = fileInput.files[0].name;\r\n                            }\r\n                        }} />\r\n                        <span className=\"file-cta\">\r\n                        <span className=\"file-icon\">\r\n                            <i className=\"material-icons\">file_upload</i>\r\n                        </span>\r\n                        <span className=\"file-label\">Choose a Picture</span>\r\n                        </span>\r\n                        <span className=\"file-name\"></span>\r\n                    </label>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                    <div id=\"banner-file\" className=\"file is-medium has-name\">\r\n                    <label className=\"file-label\">\r\n                        <input id=\"banner\" className=\"file-input\" type=\"file\" name=\"banner\" onChange={e => {\r\n                            setBanner(e.target.files[0])\r\n                            //This is to set the name of the filename to the span tag\r\n                            let fileInput = document.getElementById('banner');\r\n                            if (fileInput.files.length > 0){\r\n                                fileNameBanner.textContent = fileInput.files[0].name;\r\n                            }\r\n                        }} />\r\n                        <span className=\"file-cta\">\r\n                        <span className=\"file-icon\">\r\n                            <i className=\"material-icons\">file_upload</i>\r\n                        </span>\r\n                        <span className=\"file-label\">Choose a Banner</span>\r\n                        </span>\r\n                        <span className=\"file-name\"></span>\r\n                    </label>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                    <label className=\"label\">Title</label>\r\n                    <div className=\"control\">\r\n                     //   <input id=\"title\" name=\"title\" className=\"input\" type=\"text\" placeholder=\"Text input\"\r\n                        onChange={e => setTitle(e.target.value)}/>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                    <label className=\"label\">Description</label>\r\n                    <div className=\"control\">\r\n                        <textarea id=\"description\" name=\"description\" className=\"textarea\" placeholder=\"Textarea\"\r\n                        onChange={e => setDescription(e.target.value)}></textarea>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                    <label className=\"label\">Category</label>\r\n                    <div className=\"control\">\r\n                        <div className=\"select\">\r\n                        <select onChange={e => setFormCategory(e.target.value)}>\r\n                            <option value=\"\" disabled>Choose the category</option>\r\n                            {serverCategory.map(category =>( \r\n                                //padding in .id key when mapped out to display specific value\r\n                                <option key={category.id} value={category.id}>{category.title}</option>\r\n                            ))}\r\n                        </select>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field is-grouped\">\r\n                    <div className=\"control\">\r\n                        <button type=\"submit\" className=\"button is-link\">Submit</button>\r\n                    </div>\r\n                    <div className=\"control\">\r\n                        <button className=\"button is-link is-light\">Cancel</button>\r\n                    </div>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    </div> \r\n</main>\r\n)\r\n}\r\n\r\nexport default CreateServer*/","map":{"version":3,"sources":["C:/Users/Stephen/OneDrive/Desktop/PD/quizzer/frontend/src/components/server/CreateServer.js"],"names":["React","useState","useEffect","useHistory","getServerCategories","CreateNewServer","CreateServer","history","picture","setPicture","banner","setBanner","title","setTitle","description","setDescription","formCategory","setFormCategory","serverCategory","setserverCategory","fileNamePicture","document","querySelector","fileNameBanner","token","localStorage","getItem","then","response","handleSubmit","e","preventDefault","serverCreated","push","target","files","fileInput","getElementById","length","textContent","name","value","map","category","id"],"mappings":"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QAAQ,CAACC,EAAtB,CADwB,EAA3B,CAFL,GADA,EADJ,EAFA,GA/DJ,cA6EI,aAAK,SAAS,CAAC,kBAAf,wBACA,YAAK,SAAS,CAAC,SAAf,uBACI,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,gBAAhC,oBADJ,EADA,cAIA,YAAK,SAAS,CAAC,SAAf,uBACI,eAAQ,SAAS,CAAC,yBAAlB,oBADJ,EAJA,GA7EJ,GAFJ,EADJ,EADJ,EADJ,EADA,CAmGC,CAED,cAAetC,CAAAA,YAAf,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { getServerCategories, CreateNewServer } from '../services/Servers';\r\n\r\nfunction CreateServer() {\r\n\r\n    let history = useHistory();\r\n    const [picture, setPicture] = useState();\r\n    const [banner, setBanner] = useState();\r\n    const [title, setTitle] = useState();\r\n    const [description, setDescription] = useState();\r\n    const [formCategory, setFormCategory] = useState();\r\n\r\n    const [serverCategory, setserverCategory] = useState([]);\r\n\r\n    const fileNamePicture = document.querySelector('#picture-file .file-name');\r\n    const fileNameBanner = document.querySelector('#banner-file .file-name');\r\n\r\n\r\n    useEffect(()=> {\r\n        //Check for the token\r\n        const token = localStorage.getItem(\"token\");\r\n        //Request to get all the categories\r\n        getServerCategories(token)\r\n        .then(response => {\r\n            setserverCategory(response);\r\n        })\r\n    },[]);\r\n\r\n\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        const serverCreated = CreateNewServer(picture, banner, title, description, formCategory);\r\n        if(serverCreated === true){\r\n            history.push(\"/\");\r\n        }\r\n    };\r\n\r\n\r\nreturn (\r\n<main>\r\n    <div className=\"container pt-6\">\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <h3 className=\"title is-3\">Create New Server</h3>\r\n\r\n                    <div className=\"field\">\r\n                    <div id=\"picture-file\" className=\"file is-medium has-name\">\r\n                    <label className=\"file-label\">\r\n                        <input id=\"picture\" className=\"file-input\" type=\"file\" name=\"picture\" onChange={e => {\r\n                            setPicture(e.target.files[0])\r\n                            //This is to set the name of the filename to the span tag\r\n                            let fileInput = document.getElementById('picture');\r\n                            if (fileInput.files.length > 0){\r\n                                fileNamePicture.textContent = fileInput.files[0].name;\r\n                            }\r\n                        }} />\r\n                        <span className=\"file-cta\">\r\n                        <span className=\"file-icon\">\r\n                            <i className=\"material-icons\">file_upload</i>\r\n                        </span>\r\n                        <span className=\"file-label\">Choose a Picture</span>\r\n                        </span>\r\n                        <span className=\"file-name\"></span>\r\n                    </label>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                    <div id=\"banner-file\" className=\"file is-medium has-name\">\r\n                    <label className=\"file-label\">\r\n                        <input id=\"banner\" className=\"file-input\" type=\"file\" name=\"banner\" onChange={e => {\r\n                            setBanner(e.target.files[0])\r\n                            //This is to set the name of the filename to the span tag\r\n                            let fileInput = document.getElementById('banner');\r\n                            if (fileInput.files.length > 0){\r\n                                fileNameBanner.textContent = fileInput.files[0].name;\r\n                            }\r\n                        }} />\r\n                        <span className=\"file-cta\">\r\n                        <span className=\"file-icon\">\r\n                            <i className=\"material-icons\">file_upload</i>\r\n                        </span>\r\n                        <span className=\"file-label\">Choose a Banner</span>\r\n                        </span>\r\n                        <span className=\"file-name\"></span>\r\n                    </label>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                    <label className=\"label\">Title</label>\r\n                    <div className=\"control\">\r\n                        <input id=\"title\" name=\"title\" className=\"input\" type=\"text\" placeholder=\"Text input\"\r\n                        onChange={e => setTitle(e.target.value)}/>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                    <label className=\"label\">Description</label>\r\n                    <div className=\"control\">\r\n                        <textarea id=\"description\" name=\"description\" className=\"textarea\" placeholder=\"Textarea\"\r\n                        onChange={e => setDescription(e.target.value)}></textarea>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                    <label className=\"label\">Category</label>\r\n                    <div className=\"control\">\r\n                        <div className=\"select\">\r\n                        <select onChange={e => setFormCategory(e.target.value)}>\r\n                            <option value=\"\" disabled>Choose the category</option>\r\n                            {serverCategory.map(category =>( \r\n                                <option key={category.id} value={category.id}>{category.title}</option>\r\n                            ))}\r\n                        </select>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field is-grouped\">\r\n                    <div className=\"control\">\r\n                        <button type=\"submit\" className=\"button is-link\">Submit</button>\r\n                    </div>\r\n                    <div className=\"control\">\r\n                        <button className=\"button is-link is-light\">Cancel</button>\r\n                    </div>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    </div> \r\n</main>\r\n)\r\n}\r\n\r\nexport default CreateServer\r\n/*\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { getServerCategories, CreateNewServer } from '../services/Servers';\r\n\r\nfunction CreateServer() {\r\n\r\n    let history = useHistory();\r\n    //useStates for setting new server information\r\n    const [picture, setPicture] = useState();\r\n    const [banner, setBanner] = useState();\r\n    const [title, setTitle] = useState();\r\n    const [description, setDescription] = useState();\r\n    const [formCategory, setFormCategory] = useState();\r\n\r\n    const [serverCategory, setserverCategory] = useState([]);\r\n\r\n    //grabbing the file name for upload picture and banner\r\n    const fileNamePicture = document.querySelector('#picture-file .file-name');\r\n    const fileNameBanner = document.querySelector('#banner-file .file-name');\r\n\r\n    //using hook to server to grab the categories\r\n    useEffect(()=> {\r\n        //Check for the token\r\n        const token = localStorage.getItem(\"token\");\r\n        //Request to get all the categories\r\n        getServerCategories(token)\r\n        .then(response => {\r\n            setserverCategory(response);\r\n        })\r\n    },[]);\r\n\r\n\r\n    //button for creating new server\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        const serverCreated = CreateNewServer(picture, banner, title, description, formCategory);\r\n        if(serverCreated === true){\r\n            //redirect user to homepage\r\n            history.push(\"/\");\r\n        }\r\n    };\r\n\r\n\r\nreturn (\r\n<main>\r\n    <div className=\"container pt-6\">\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n                \r\n                <form onSubmit={handleSubmit}>\r\n                    <h3 className=\"title is-3\">Quizzer - Create New Server</h3>\r\n\r\n                    <div className=\"field\">\r\n                    <div id=\"picture-file\" className=\"file is-medium has-name\">\r\n                    <label className=\"file-label\">\r\n                       <input id=\"picture\" className=\"file-input\" type=\"file\" name=\"picture\" onChange={e => {\r\n                            setPicture(e.target.files[0])\r\n                            //This is to set the name of the filename to the tag then run condition\r\n                            let fileInput = document.getElementById('picture');\r\n                            if (fileInput.files.length > 0){\r\n                                fileNamePicture.textContent = fileInput.files[0].name;\r\n                            }\r\n                        }} />\r\n                        <span className=\"file-cta\">\r\n                        <span className=\"file-icon\">\r\n                            <i className=\"material-icons\">file_upload</i>\r\n                        </span>\r\n                        <span className=\"file-label\">Choose a Picture</span>\r\n                        </span>\r\n                        <span className=\"file-name\"></span>\r\n                    </label>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                    <div id=\"banner-file\" className=\"file is-medium has-name\">\r\n                    <label className=\"file-label\">\r\n                        <input id=\"banner\" className=\"file-input\" type=\"file\" name=\"banner\" onChange={e => {\r\n                            setBanner(e.target.files[0])\r\n                            //This is to set the name of the filename to the span tag\r\n                            let fileInput = document.getElementById('banner');\r\n                            if (fileInput.files.length > 0){\r\n                                fileNameBanner.textContent = fileInput.files[0].name;\r\n                            }\r\n                        }} />\r\n                        <span className=\"file-cta\">\r\n                        <span className=\"file-icon\">\r\n                            <i className=\"material-icons\">file_upload</i>\r\n                        </span>\r\n                        <span className=\"file-label\">Choose a Banner</span>\r\n                        </span>\r\n                        <span className=\"file-name\"></span>\r\n                    </label>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                    <label className=\"label\">Title</label>\r\n                    <div className=\"control\">\r\n                     //   <input id=\"title\" name=\"title\" className=\"input\" type=\"text\" placeholder=\"Text input\"\r\n                        onChange={e => setTitle(e.target.value)}/>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                    <label className=\"label\">Description</label>\r\n                    <div className=\"control\">\r\n                        <textarea id=\"description\" name=\"description\" className=\"textarea\" placeholder=\"Textarea\"\r\n                        onChange={e => setDescription(e.target.value)}></textarea>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                    <label className=\"label\">Category</label>\r\n                    <div className=\"control\">\r\n                        <div className=\"select\">\r\n                        <select onChange={e => setFormCategory(e.target.value)}>\r\n                            <option value=\"\" disabled>Choose the category</option>\r\n                            {serverCategory.map(category =>( \r\n                                //padding in .id key when mapped out to display specific value\r\n                                <option key={category.id} value={category.id}>{category.title}</option>\r\n                            ))}\r\n                        </select>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"field is-grouped\">\r\n                    <div className=\"control\">\r\n                        <button type=\"submit\" className=\"button is-link\">Submit</button>\r\n                    </div>\r\n                    <div className=\"control\">\r\n                        <button className=\"button is-link is-light\">Cancel</button>\r\n                    </div>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    </div> \r\n</main>\r\n)\r\n}\r\n\r\nexport default CreateServer*/"]},"metadata":{},"sourceType":"module"}