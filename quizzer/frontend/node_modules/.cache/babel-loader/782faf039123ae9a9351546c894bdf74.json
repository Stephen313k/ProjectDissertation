{"ast":null,"code":"import axios from\"axios\";export var setAxiosAuthToken=function setAxiosAuthToken(token){if(typeof token!==\"undefined\"&&token){//Apply the TOKEN for every request that we will make in the future.\naxios.defaults.headers.common[\"Authorization\"]=\"Token \"+token;}else{//Delete auth header\ndelete axios.defaults.headers.common[\"Authorization\"];}};export var setToken=function setToken(token){localStorage.setItem(\"token\",token);};export var setCurrentUser=function setCurrentUser(user){localStorage.setItem(\"user\",JSON.stringify(user));};export var unsetCurrentUser=function unsetCurrentUser(){setAxiosAuthToken(null);localStorage.removeItem(\"token\");localStorage.removeItem(\"user\");};export var getCurrentUser=function getCurrentUser(){axios.get(\"api/authy/whoami\").then(function(response){var user={id:response.data.id,username:response.data.username,email:response.data.email,picture:response.data.profile.picture,banner:response.data.profile.banner};setCurrentUser(user);});};//Log out services\nexport var logout=function logout(){axios.post('api/authy/logout').then(function(response){unsetCurrentUser();console.log(\"Logout successfully\");});};export var logoutall=function logoutall(){axios.post('api/authy/logoutall').then(function(response){unsetCurrentUser();console.log(\"Logout successfully all tokens deleted\");});};//Service to log the user\nexport var loginUser=function loginUser(username,password){//Headers\nvar config={headers:{'Content-Type':'application/json'}};//Request body\nvar body=JSON.stringify({username:username,password:password});var promise=axios.post('api/authy/login',body,config);var dataPromise=promise.then(function(response){return response.data.token;});return dataPromise;};//Service to Register USER\nexport var registerUser=function registerUser(username,email,password){//Headers\nvar config={headers:{'Content-Type':'application/json'}};//Request body\nvar body=JSON.stringify({username:username,email:email,password:password});axios.post('api/authy/signup',body,config).then(function(response){var auth_token=response.data.token;setAxiosAuthToken(auth_token);setToken(auth_token);getCurrentUser();}).catch(function(error){unsetCurrentUser();console.log(error);window.alert(\"Error username/email may be duplicated\"+error);});return true;};","map":{"version":3,"sources":["C:/Users/Stephen/OneDrive/Desktop/New folder (13)/ProjectDissertation/quizzer/quizzer/frontend/src/components/services/auth.js"],"names":["axios","setAxiosAuthToken","token","defaults","headers","common","setToken","localStorage","setItem","setCurrentUser","user","JSON","stringify","unsetCurrentUser","removeItem","getCurrentUser","get","then","response","id","data","username","email","picture","profile","banner","logout","post","console","log","logoutall","loginUser","password","config","body","promise","dataPromise","registerUser","auth_token","catch","error","window","alert"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const setAxiosAuthToken = (token) => {\r\n    if(typeof token !== \"undefined\" && token){\r\n        //Apply the TOKEN for every request that we will make in the future.\r\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\r\n    } else {\r\n        //Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport const setToken = (token) => {\r\n    localStorage.setItem(\"token\", token);\r\n};\r\n\r\nexport const setCurrentUser = (user) => {\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n};\r\n\r\nexport const unsetCurrentUser = () => {\r\n    setAxiosAuthToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n    axios\r\n    .get(\"api/authy/whoami\")\r\n    .then(response =>{\r\n        const user = {\r\n            id: response.data.id,\r\n            username: response.data.username,\r\n            email: response.data.email,\r\n            picture: response.data.profile.picture,\r\n            banner: response.data.profile.banner,\r\n        };\r\n        setCurrentUser(user);\r\n    })\r\n};\r\n\r\n//Log out services\r\n\r\nexport const logout = () => {\r\n    axios\r\n    .post('api/authy/logout')\r\n    .then(response => {\r\n        unsetCurrentUser();\r\n        console.log(\"Logout successfully\");\r\n    })\r\n};\r\n\r\nexport const logoutall = () => {\r\n    axios\r\n    .post('api/authy/logoutall')\r\n    .then(response => {\r\n        unsetCurrentUser();\r\n        console.log(\"Logout successfully all tokens deleted\");\r\n    })\r\n};\r\n\r\n//Service to log the user\r\nexport const loginUser = (username, password ) => {\r\n    //Headers\r\n    const config = {\r\n        headers : {\r\n            'Content-Type' : 'application/json',\r\n        }\r\n    };\r\n    //Request body\r\n    const body = JSON.stringify({ username, password });\r\n    const promise = axios.post('api/authy/login', body, config);\r\n    const dataPromise = promise.then((response) => response.data.token);\r\n    return dataPromise;\r\n};\r\n\r\n\r\n//Service to Register USER\r\nexport const registerUser = (username, email, password) => {\r\n    //Headers\r\n    const config = {\r\n        headers : {\r\n            'Content-Type' : 'application/json',\r\n        }\r\n    };\r\n    //Request body\r\n    const body = JSON.stringify({ username, email, password});\r\n    axios\r\n    .post('api/authy/signup', body, config)\r\n    .then(response =>{\r\n        const auth_token = response.data.token;\r\n        setAxiosAuthToken(auth_token);\r\n        setToken(auth_token);\r\n        getCurrentUser();\r\n    })\r\n    .catch(error => {\r\n        unsetCurrentUser();\r\n        console.log(error);\r\n        window.alert(\"Error username/email may be duplicated\" + error);\r\n    });\r\n    return true;\r\n};"]},"metadata":{},"sourceType":"module"}